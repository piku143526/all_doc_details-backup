AKS Setup 

Setup :- 1st Create costom vps 

==================================================================================================================================================================
az aks create \
  --resource-group 1-10876280-playground-sandbox \
  --name stage-aks-isp-new \
  --node-count 2 \
  --enable-cluster-autoscaler \
  --min-count 2 \
  --max-count 3 \
  --ssh-key-value azure-key.pub \
  --node-vm-size Standard_D2s_v3 \
  --vnet-subnet-id "/subscriptions/2213e8b1-dbc7-4d54-8aff-b5e315df5e5b/resourceGroups/1-10876280-playground-sandbox/providers/Microsoft.Network/virtualNetworks/stage-demo/subnets/stage-private-subnet"
  
  
==============================================================================================================================================================================
storage-class.yml

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azure-disk
provisioner: kubernetes.io/azure-disk
parameters:
  storageaccounttype: Premium_LRS  # Choose between Standard_LRS, Premium_LRS, or StandardSSD_LRS
  kind: managed  # This is required for managed disks


================================================================================================================================================================================

helm upgrade --install loki grafana/loki-stack --set grafana.enabled=true,prometheus.enabled=true,prometheus.alertmanager.persistentVolume.enabled=false,prometheus.server.persistentVolume.enabled=false,loki.persistence.enabled=true,loki.persistence.storageClassName=azure-disk,loki.persistence.size=10Gi

=================================================================================================================================================================================



az aks get-credentials --resource-group 1-7d76f3b8-playground-sandbox  --name stage-aks-demo  


az aks get-credentials --resource-group 1-10876280-playground-sandbox  --name stage-aks-isp

az aks get-credentials --resource-group stage-aks-isp  --name stage-aks-isp


===========================================================================================================================================================
Install NGINX Ingress Controller:

helm install ingress-nginx ingress-nginx/ingress-nginx \
  --namespace ingress-nginx \
  --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz
  
==========================================================================================================================================================
Install NGINX Ingress Controller:

 helm install my-ingress-nginx ingress-nginx/ingress-nginx \
  --namespace ingress-nginx \
  --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz

  
============================================================================================================================================================
or 
Install Helm:
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash


Install NGINX Ingress Controller:
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

==============================================================================================================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ns
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: phpmyadmin.iteindia.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: php-admin
            port:
              number: 82
             
             
===============================================================================================================================================================

https://learn.microsoft.com/en-us/azure/aks/ingress-basic?tabs=azure-cli

https://github.com/MicrosoftDocs/azure-docs/blob/main/articles/aks/ingress-basic.md

https://prakashkumar0301.medium.com/ingress-controller-in-aks-4b92fb8031f0

https://github.com/devopsproin/certified-kubernetes-administrator/tree/main/Ingress

===========================================================================================================================================================

 helm repo add jetstack https://charts.jetstack.io
 
 helm install cert-manager --namespace cert-manager --version v1.13.2 jetstack/cert-manager  --create-namespace 
 
 helm install cert-manager jetstack/cert-manager --namespace demo-ns --version v1.13.2 --set installCRDs=true --set nodeSelector."kubernetes\.io/os"=linux
  
===========================================================================================================================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ingress
  namespace: demo-ns
  annotations:
    
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod  # Specify the ClusterIssuer
spec: 
  ingressClassName: nginx
  tls:
  - hosts:
    - phpmyadmin.iteindia.cloud
    secretName: tls-secret  # Specify the secret to store the TLS certificate
  rules:
  - host: phpmyadmin.iteindia.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: php-admin
            port:
              number: 82
              
==============================================================================================================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ingress
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx  
spec:
  ingressClassName: nginx
  rules:
  - host: nginx.iteindia.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80

=========================================================================================================

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: demo-ingress
  namespace: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod  
spec: 
  tls:
  - hosts:
    - nginx.iteindia.cloud
    secretName: tls-secre 
  ingressClassName: nginx
  rules:
  - host: nginx.iteindia.cloud
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80
              
================================================================================================================




https://github.com/quickbooks2018/nginx-ingress?tab=readme-ov-file     --------------------> nginx controller



==============================================================================================================
 


  
  
  
  
